import wbjnmodel=ExtAPI.DataModel.Project.Modelgeom = model.Geometrymesh= model.Meshconnections=model.Connectionsmaterials =model.Materialsanalysis =model.Analyses[0]solution =analysis.Solutioncmd = 'returnValue(GetUserFilesDirectory())'user_dir = wbjn.ExecuteCommand(ExtAPI, cmd)for i in range(1):    bolt_pretension_ids = [209, 211, 213, 215, 217, 219]    for id in bolt_pretension_ids:        bolt_pretension = DataModel.GetObjectById(id)        bolt_pretension.Preload.Inputs[0].DiscreteValues = [Quantity('1[s]')]        bolt_pretension.Preload.Output.DiscreteValues = [Quantity('1000[N]')]    for analysis in ExtAPI.DataModel.AnalysisList:        #Get All direction Deformation Objects in all the Analyses in the Tree        DirectionDeformationResults = [child for child in analysis.Solution.Children if child.DataModelObjectCategory == DataModelObjectCategory.DirectionalDeformation]        for result in DirectionDeformationResults:            result.Activate()            filename = user_dir + "/" + Model.Analyses[0].Name + " - " + result.Name + "0.csv"            result.ExportToTextFile(filename)    print("Script has completed!")    analysis.Solve() # calculate the solution    print("The end")